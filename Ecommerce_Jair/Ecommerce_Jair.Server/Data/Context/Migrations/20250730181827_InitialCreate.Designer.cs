// <auto-generated />
using System;
using Ecommerce_Jair.Server.BD.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce_Jair.Server.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    [Migration("20250730181827_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ParentCategoryID");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A2B307D8CCA");

                    b.HasIndex(new[] { "ParentCategoryId" }, "idx_categories_parent");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DiscountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("DiscountId")
                        .HasName("PK__Discount__E43F6DF69BD4F1D0");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DiscountType");

                    b.HasIndex(new[] { "Code" }, "UQ__Discount__A25C5AA7A42EC530")
                        .IsUnique();

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.DiscountType", b =>
                {
                    b.Property<string>("TypeName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TypeName")
                        .HasName("PK__Discount__D4E7DFA90019A970");

                    b.ToTable("DiscountTypes");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("AdminNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAF19D7417D");

                    b.HasIndex(new[] { "Status" }, "idx_orders_status");

                    b.HasIndex(new[] { "UserId" }, "idx_orders_userid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(29, 2)")
                        .HasComputedColumnSql("([Quantity]*[UnitPrice])", false);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__OrderDet__D3B9D30C465ED923");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.OrderStatus", b =>
                {
                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusName")
                        .HasName("PK__OrderSta__05E7698BC377CDE1");

                    b.ToTable("OrderStatus", (string)null);
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("AdminComments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TransactionID");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A584806D92F");

                    b.HasIndex("OrderId");

                    b.HasIndex(new[] { "Status" }, "idx_payments_status");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.PaymentStatus", b =>
                {
                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusName")
                        .HasName("PK__PaymentS__05E7698BC617CBF5");

                    b.ToTable("PaymentStatus", (string)null);
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SKU");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6EDBB16ED13");

                    b.HasIndex(new[] { "Sku" }, "UQ__Products__CA1ECF0D23578401")
                        .IsUnique();

                    b.HasIndex(new[] { "CategoryId" }, "idx_products_category");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.ProductReview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<bool?>("AdminApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReviewId")
                        .HasName("PK__ProductR__74BC79AE2B636CD3");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "ProductId" }, "idx_reviews_product");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3A5AEEB8E8");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B6160613958E0")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.ShoppingCart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CartID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime?>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CartId")
                        .HasName("PK__Shopping__51BCD797E3650BA9");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "UserId", "ProductId" }, "UC_ShoppingCart")
                        .IsUnique();

                    b.ToTable("ShoppingCart", (string)null);
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastPasswordChange")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordResetToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC7F1BD566");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534917C79E2")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "idx_users_email");

                    b.ToTable("Users", t =>
                        {
                            t.HasTrigger("trg_AuditUsers");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<DateTime?>("AssignedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__UserRole__AF27604F302B402E");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.UserTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Revoked")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Wishlist", b =>
                {
                    b.Property<int>("WishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WishlistID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishlistId"));

                    b.Property<DateTime?>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("WishlistId")
                        .HasName("PK__Wishlist__233189CB9D87E2FB");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "UserId", "ProductId" }, "UC_Wishlist")
                        .IsUnique();

                    b.ToTable("Wishlist", (string)null);
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Category", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.Category", "ParentCategory")
                        .WithMany("InverseParentCategory")
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("FK__Categorie__Paren__44FF419A");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Discount", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.User", "CreatedByNavigation")
                        .WithMany("Discounts")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Discounts__Creat__797309D9");

                    b.HasOne("Ecommerce_Jair.Server.Models.DiscountType", "DiscountTypeNavigation")
                        .WithMany("Discounts")
                        .HasForeignKey("DiscountType")
                        .IsRequired()
                        .HasConstraintName("FK__Discounts__Disco__778AC167");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("DiscountTypeNavigation");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Order", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.OrderStatus", "StatusNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("Status")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__Status__5535A963");

                    b.HasOne("Ecommerce_Jair.Server.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__UserID__52593CB8");

                    b.Navigation("StatusNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.OrderDetail", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__5812160E");

                    b.HasOne("Ecommerce_Jair.Server.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Produ__59063A47");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Payment", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__OrderI__6FE99F9F");

                    b.HasOne("Ecommerce_Jair.Server.Models.PaymentStatus", "StatusNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("Status")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Status__71D1E811");

                    b.Navigation("Order");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Product", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Products__Catego__4AB81AF0");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.ProductReview", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductRe__Produ__693CA210");

                    b.HasOne("Ecommerce_Jair.Server.Models.User", "User")
                        .WithMany("ProductReviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductRe__UserI__6A30C649");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.ShoppingCart", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.Product", "Product")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__ShoppingC__Produ__5EBF139D");

                    b.HasOne("Ecommerce_Jair.Server.Models.User", "User")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__ShoppingC__UserI__5DCAEF64");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.UserRole", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__RoleI__403A8C7D");

                    b.HasOne("Ecommerce_Jair.Server.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__UserI__3F466844");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.UserTokens", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Wishlist", b =>
                {
                    b.HasOne("Ecommerce_Jair.Server.Models.Product", "Product")
                        .WithMany("Wishlists")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Wishlist__Produc__656C112C");

                    b.HasOne("Ecommerce_Jair.Server.Models.User", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Wishlist__UserID__6477ECF3");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Category", b =>
                {
                    b.Navigation("InverseParentCategory");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.DiscountType", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ProductReviews");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Ecommerce_Jair.Server.Models.User", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
